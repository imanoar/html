<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>
        Using the Strategy Pattern in Laravel | Ash Allen Design
    </title>
    <meta name="description" content="Learn about the strategy pattern and how we can use it in your Laravel codebase to improve the extendability and maintainability of your code.">
    <link rel="canonical" href="using-the-bridge-pattern-in-laravel">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="csrf-token" content="WOddtz2xrsMLwDq1Y00hyUG0vtUNByspVCaLQ9k9">

    <!-- Open Graph Tags -->
    <meta property="og:title" content="Using the Strategy Pattern in Laravel"/>
    <meta property="og:url" content="https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel"/>
    <meta property="og:type" content="website"/>
    <meta property="og:description" content="Learn about the strategy pattern and how we can use it in your Laravel codebase to improve the extendability and maintainability of your code."/>
    <meta property="og:image" content="https://ashallendesign.ams3.digitaloceanspaces.com/public/blog/23/using-the-strategy-pattern-in-laravel.png"/>

    <link href="https://fonts.googleapis.com/css2?family=Lato:wght@400;700&family=Poppins:ital,wght@0,400;0,500;0,600;0,700;1,400&display=swap" rel="stylesheet">
    <link rel='preload' as="font" href="../fonts/ElegantIcons.woff" type="font/woff" crossorigin>

    <!-- CSS - Vendor CSS -->
    <link href="../css/vendor.css?id=d1939467ce73c95e2c3f" rel="stylesheet">

    <!-- jQuery -->
    <script defer src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

    <!-- Font Awesome -->
    <script defer src="https://kit.fontawesome.com/210fec59d6.js" crossorigin="anonymous"></script>

    <!-- Cookie Consent -->
    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/cookieconsent2/3.1.0/cookieconsent.min.js"></script>

    <!-- Scripts -->
    <script defer type="text/javascript" src="../js/scripts.js?id=bd890df8d5745390bb89"></script>

            <!-- Fathom - beautiful, simple website analytics -->
        <script src="https://cdn.usefathom.com/script.js" data-site="WXKBGHKV" defer></script>
    
</head>
<body data-spy="scroll" data-target=".navbar">
<header class="header">
    <nav class="navbar navbar-expand-lg fixed-top" id="main-nav">
        <div class="container">
            <a class="navbar-brand" href="../index.html">
                <img class="white-logo" src="../images/custom/logo-white-side.png?v=1" alt="Ash Allen Design logo in white">
                <img class="color-logo" src="../images/custom/logo-colour-side.png?v=1" alt="Ash Allen Design in colour">
            </a>
            <button class="navbar-toggler order-1" type="button" data-toggle="collapse" data-target="#main-nav-collapse" aria-controls="main-nav-collapse" aria-expanded="false" aria-label="Toggle navigation">
                <span class="menu-toggle">
                    <span class="hamburger">
                        <span></span>
                        <span></span>
                        <span></span>
                    </span>
                    <span class="hamburger-cross">
                        <span></span>
                        <span></span>
                    </span>
                </span>
            </button>
            <div class="collapse navbar-collapse order-3 order-lg-2" id="main-nav-collapse">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a class="nav-link nav-link-scroll" href="../index.html">Home</a>
                    </li>

                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="using-the-bridge-pattern-in-laravel#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Services
                        </a>
                        <ul class="dropdown-menu">
                            <li class="nav-item"><a class="nav-link" href="../services">Services</a></li>
                            <hr>
                            <li class="nav-item"><a class="nav-link" href="../services/website-design">Website Design</a></li>
                            <li class="nav-item"><a class="nav-link" href="../services/laravel-web-development">Laravel Web Development</a></li>
                        </ul>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link nav-link-scroll" href="../freebies">Freebies</a>
                    </li>

                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="../portfolio" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Portfolio
                        </a>
                        <ul class="dropdown-menu">
                            <li class="nav-item"><a class="nav-link" href="../portfolio">Portfolio</a></li>
                            <hr>
                            <li class="nav-item"><a class="nav-link" href="../portfolio#about-me">About Me</a></li>
                            <li class="nav-item"><a class="nav-link" href="../portfolio#previous-projects">Previous Projects</a></li>
                        </ul>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link nav-link-scroll" href="../blog">Blog</a>
                    </li>

                    <div class="nav-button order-2 order-lg-3">
                        <a href="../contact">Contact</a>
                    </div>
                </ul>
            </div>
        </div>
        <div id="progress-bar"></div>
    </nav>
</header><!-- header -->


    <div class="page-title blog-page-title bg-img bg-6 overflow-x-hidden">
    <div class="overlay"></div>
    <div class="container">
        <div class="row mb-5">
            <div class="col-lg-7">
                <div class="row">
                    <div class="col-12">
                        <div class="page-title-content align-items-center text-left">
                            <h1 class="page-name">
                                Using the Strategy Pattern in Laravel
                            </h1>
                        </div>

                        <div class="col-lg-8 text-white py-5 px-lg-0">
                                                            <div class="mb-5">
                                                                                                                <a href="../blog?category=laravel" class="badge badge-secondary px-3 py-2 my-1 category-badge">
                                            <i class="fas fa-hashtag pr-2"></i>Laravel
                                        </a>
                                                                            <a href="../blog?category=tips-and-tricks" class="badge badge-secondary px-3 py-2 my-1 category-badge">
                                            <i class="fas fa-hashtag pr-2"></i>Tips &amp; Tricks
                                        </a>
                                                                            <a href="../blog?category=tutorial" class="badge badge-secondary px-3 py-2 my-1 category-badge">
                                            <i class="fas fa-hashtag pr-2"></i>Tutorial
                                        </a>
                                                                            <a href="../blog?category=web-development" class="badge badge-secondary px-3 py-2 my-1 category-badge">
                                            <i class="fas fa-hashtag pr-2"></i>Web Development
                                        </a>
                                                                    </div>
                            
                            <div class="mb-5">
                                <i class="fa fa-clock pr-2"></i> 8 minutes read
                            </div>

                            <img src="../images/custom/AshleyAllen-Blog.png?v=1" alt="Ashley Allen - Freelance web developer"
                                 class="blog-author-image mr-2 shadow">
                            <span class="meta-author text-black">Ashley Allen</span>&nbsp;Â·&nbsp;
                            <span class="meta-date font-italic">17th June 2021</span>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-5 px-lg-0">
                <figure class="pb-3">
                    <img class="rounded-thumbnail img-fluid shadow"
                         src="https://ashallendesign.ams3.digitaloceanspaces.com/public/blog/23/using-the-strategy-pattern-in-laravel.png"
                         alt="Learn about the strategy pattern and how we can use it in your Laravel codebase to improve the extendability and maintainability of your code.">
                </figure>
            </div>
        </div>
    </div>
</div>

    <div class="blog-page-main-wrapper blog-post-container pt-5 mt-5 py-2">
        <div class="container">
            <div class="row justify-content-center full-width">
                <main class="col-lg-8 main-content">
                    <div class="author-box clearfix rounded-thumbnail">
        <form class="subscription-form">
            <div class="author-avatar">
                <i class="far fa-paper-plane"></i>
            </div>
            <div class="author-info">
                <div class="author-info-head">
                    <h3>Get your FREE copy of "<span class="pdf-name">The Clean Coder's Guide to Laravel</span>" and subscribe for future posts!</h3>
                </div>
                <div class="author-description">
                    <p class="mb-2 pt-2">
                        Join over 4000 developers who have already downloaded their copy!
                    </p>

                    <p class="mb-2">
                        Drop your email in the box below and you'll get notified every time a new post is published. You'll also get a FREE copy of my <strong>70 page</strong> PDF that shows you how you can make your Laravel projects cleaner.
                    </p>

                    <div class="row">
                        <div class="col-md">
                            <div class="form-group">
                                <input type="email" class="form-control" name="email" id="email" required placeholder="Your email address">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button type="submit" class="btn fill-style">Subscribe</button>
                        </div>
                        <div class="col-md-12 error-box"></div>
                    </div>
                </div>
            </div>
        </form>
    </div>
                        <div class="blog-single-post blog-post" id="blog-post-content">
        <div class="post-info">
            <div class="post-des mt-0">

                
                <h2>Introduction</h2>
<p>In software and web development, it's always important to write code that is maintainable and extendable. The solution that you first create will likely change over time. So, you need to make sure you write your code in a way that doesn't require a whole rewrite or refactor in the future.</p>
<p>The <strong>strategy pattern</strong> can be used to improve the extendability of your code and also improve the maintainability over time.</p>
<h3>Intended Audience</h3>
<p>This post is written for Laravel developers who have an understanding of how interfaces work and how to use them to decouple your code. If you're a little unsure about this subject, check out my post from last week that discusses <a href="using-interfaces-to-write-better-php-code">using interfaces to write better PHP code</a>.</p>
<p>It's also strongly advised that you have an understanding of <a href="https://laravel.com/docs/8.x/controllers#dependency-injection-and-controllers" target="_blank" rel="noopener noreferrer">dependency injection</a> and how the <a href="https://laravel.com/docs/8.x/container#introduction" target="_blank" rel="noopener noreferrer">Laravel service container</a> works.</p>
<h2>What Is the Strategy Pattern?</h2>
<p><a href="https://refactoring.guru/design-patterns/strategy" target="_blank" rel="noopener noreferrer">Refactoring Guru</a> defines the strategy pattern as a &quot;behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.&quot;. This might sound a bit scary at first, but I promise that it's not as bad as you think. If you want to read more into design patterns, I'd highly recommend checking out <a href="https://refactoring.guru/" target="_blank" rel="noopener noreferrer">Refactoring Guru</a>. They do a great job of explaining the strategy pattern in depth as well as other structural patterns.</p>
<p>The strategy pattern is basically a pattern that helps us to decouple our code and make it super extendable. In fact, you probably use it every day with Laravel without even noticing whenever you use the <code>Storage</code> and <code>Cache</code> facades  (and a few other places too). Let's say that you use this code:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #FFDB8E;">Cache</span><span style="color: #7FDAFF;">::</span><span style="color: #70B0FF;">put</span><span style="color: #7FDAFF;">(</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">name</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">Ash Allen</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #FF9668;">600</span><span style="color: #7FDAFF;">);</span></div></code>    </pre>
</div>
<p>The code above is resolving a class from the service container by using the <a href="https://laravel.com/docs/8.x/facades#introduction" target="_blank" rel="noopener noreferrer">facade</a>. I won't get into how facades work as it's not really the purpose of this article, but the important bit to know is that the <code>Cache</code> facade here is binding an interface (<code>Illuminate\Contracts\Cache\Factory</code> to be specific) to a class and using it. It is then storing the word 'Ash Allen' under the key 'name' for 10 minutes.</p>
<p>As you'll have probably noticed in the <a href="https://laravel.com/docs/8.x/cache#introduction" target="_blank" rel="noopener noreferrer">Laravel documentation</a> and in your project's config, Laravel supports a few different drivers for caching, including: <a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis</a>, <a href="https://aws.amazon.com/dynamodb/" target="_blank" rel="noopener noreferrer">DynamoDB</a>, <a href="https://memcached.org/" target="_blank" rel="noopener noreferrer">Memcached</a> and the database. So, for example, if we were to set our cache driver in our <em>.env</em> file to <code>CACHE_DRIVER=redis</code>, when we run our code snippet above, the data would be stored in our Redis cache. However, if we were to change the driver to be <code>CACHE_DRIVER=database</code>, this would result in data being stored in the database instead.</p>
<p>Each different cache driver has it's own respective class that deals with how the framework interacts with the cache. So, when we change the driver in our <em>.env</em>, Laravel needs to know which driver to use. This is where the strategy pattern steps in. Under the hood, whenever we use the <code>Cache</code> facade, Laravel is actually resolving an <code>Illuminate\Contracts\Cache\Factory</code> interface from the service container. It does this by checking the config value (e.g. <em>redis</em>, <em>database</em>, etc.) and then mapping that interface to a class. For example, whenever we have our cache driver set to <code>CACHE_DRIVER=redis</code> and we try to resolve the <code>Factory</code> interface, we will get a class that specifically interacts with the Redis cache and nothing else.</p>
<p>As you can see, the strategy pattern can improve the extendability of your code. For example, if we wanted to create our own custom cache driver, we could just create the implementation and then let Laravel know that it is available for using. For a bit more context, <a href="https://laravel.com/docs/8.x/cache#adding-custom-cache-drivers" target="_blank" rel="noopener noreferrer">check out the Laravel documentation</a> to see an example of how you can add your own driver.</p>
<div class="blog-affiliate-one"></div>
<h2>Using the Strategy Pattern in Laravel</h2>
<p>Now that we have a basic idea of what the strategy pattern is, let's look at how we can use it ourselves in our own Laravel application.</p>
<p>Let's imagine that we have a Laravel application that users can use for getting exchange rates and currency conversions. Now, let's say that our app uses an external API (<a href="https://exchangeratesapi.io" target="_blank" rel="noopener noreferrer">exchangeratesapi.io</a>) for getting the latest currency conversions.</p>
<p>We could create this class for interacting with the API:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #BAACFF;">class</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">ExchangeRatesApiIO</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">getRate</span><span style="color: #7FDAFF;">(</span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">from</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">to</span><span style="color: #7FDAFF;">):</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">float</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">4</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">5</span><span style="color: #7FDAFF;">        </span><span style="color: #7E8EDA;">// Make a call to the exchangeratesapi.io API here and fetch the exchange rate.</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">6</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">7</span><span style="color: #E4F3FA;">        </span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">rate</span><span style="color: #7FDAFF;">;</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">8</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">9</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>Now, let's use this class in a controller method so that we can return the exchange rate for a given currency. We're going to use dependency injection to resolve the class from the container:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 1</span><span style="color: #BAACFF;">class</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">RateController</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">extends</span><span style="color: #E4F3FA;"> </span><span style="color: #7AF8CA;">Controller</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #34D3FB;">__invoke</span><span style="color: #7FDAFF;">(</span><span style="color: #FFDB8E;">ExchangeRatesApiIO</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">exchangeRatesApiIO</span><span style="color: #7FDAFF;">):</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">JsonResponse</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 4</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 5</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">rate </span><span style="color: #7FDAFF;">=</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">exchangeRatesApiIO</span><span style="color: #7FDAFF;">-&gt;</span><span style="color: #70B0FF;">getRate</span><span style="color: #7FDAFF;">(</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 6</span><span style="color: #E4F3FA;">            </span><span style="color: #70B0FF;">request</span><span style="color: #7FDAFF;">()-&gt;</span><span style="color: #A7C6E8;">from</span><span style="color: #7FDAFF;">,</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 7</span><span style="color: #E4F3FA;">            </span><span style="color: #70B0FF;">request</span><span style="color: #7FDAFF;">()-&gt;</span><span style="color: #A7C6E8;">to</span><span style="color: #7FDAFF;">,</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 8</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">);</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 9</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">10</span><span style="color: #E4F3FA;">        </span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">response</span><span style="color: #7FDAFF;">()-&gt;</span><span style="color: #70B0FF;">json</span><span style="color: #7FDAFF;">([</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">rate</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">=&gt;</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">rate</span><span style="color: #7FDAFF;">]);</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">11</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">12</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>This code will work as expected, but we've tightly coupled the <code>ExchangeRatesApiIO</code> class to the controller method. This means that if we decide to migrate over to using a different API, such as <a href="https://fixer.io" target="_blank" rel="noopener noreferrer">Fixer</a>, in the future, we'll need to replace everywhere in the codebase that uses the <code>ExchangeRatesApiIO</code> class with our new class. As you can imagine, in large projects, this can be a slow and tedious task sometimes. So, to avoid this issue, instead of trying to instantiate a class in the controller method, we can use the strategy pattern to bind and resolve an interface instead.</p>
<p>Let's start by creating a new <code>ExchangeRatesService</code> interface:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #BAACFF;">interface</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">ExchangeRatesService</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">getRate</span><span style="color: #7FDAFF;">(</span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">from</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">to</span><span style="color: #7FDAFF;">):</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">float</span><span style="color: #7FDAFF;">;</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">4</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>We can now update our <code>ExchangeRatesApiIO</code> class to implement this interface:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #BAACFF;">class</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">ExchangeRatesApiIO</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">implements</span><span style="color: #E4F3FA;"> </span><span style="color: #7AF8CA;">ExchangeRatesService</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">getRate</span><span style="color: #7FDAFF;">(</span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">from</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">to</span><span style="color: #7FDAFF;">):</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">float</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">4</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">5</span><span style="color: #7FDAFF;">        </span><span style="color: #7E8EDA;">// Make a call to the exchangeratesapi.io API here and fetch the exchange rate.</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">6</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">7</span><span style="color: #E4F3FA;">        </span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">rate</span><span style="color: #7FDAFF;">;</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">8</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">9</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>Now that we've done that, we can update our controller method to inject the interface rather than the class:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 1</span><span style="color: #BAACFF;">class</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">RateController</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">extends</span><span style="color: #E4F3FA;"> </span><span style="color: #7AF8CA;">Controller</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #34D3FB;">__invoke</span><span style="color: #7FDAFF;">(</span><span style="color: #FFDB8E;">ExchangeRatesService</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">exchangeRatesService</span><span style="color: #7FDAFF;">):</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">JsonResponse</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 4</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 5</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">rate </span><span style="color: #7FDAFF;">=</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">exchangeRatesService</span><span style="color: #7FDAFF;">-&gt;</span><span style="color: #70B0FF;">getRate</span><span style="color: #7FDAFF;">(</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 6</span><span style="color: #E4F3FA;">            </span><span style="color: #70B0FF;">request</span><span style="color: #7FDAFF;">()-&gt;</span><span style="color: #A7C6E8;">from</span><span style="color: #7FDAFF;">,</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 7</span><span style="color: #E4F3FA;">            </span><span style="color: #70B0FF;">request</span><span style="color: #7FDAFF;">()-&gt;</span><span style="color: #A7C6E8;">to</span><span style="color: #7FDAFF;">,</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 8</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">);</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 9</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">10</span><span style="color: #E4F3FA;">        </span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">response</span><span style="color: #7FDAFF;">()-&gt;</span><span style="color: #70B0FF;">json</span><span style="color: #7FDAFF;">([</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">rate</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">=&gt;</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">rate</span><span style="color: #7FDAFF;">]);</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">11</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">12</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>Of course, we can't instantiate an interface; we want to instantiate the <code>ExchangeRatesApiIO</code> class. So, we need to tell Laravel what to do whenever we try and resolve the interface from the container. We can do this by using a <a href="https://laravel.com/docs/8.x/providers#introduction" target="_blank" rel="noopener noreferrer">service provider</a>. Some people prefer to keep things like this inside their <code>AppServiceProvider</code> and keep all of their bindings in one place. However, I prefer to create a separate provider for each binding that I want to create. It's purely down to personal preference and whatever you feel fits your workflow more. For this example, we're going to create our own service provider.</p>
<p>Let's create a new service provider using the Artisan command:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="shell" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #FFDB8E;">php</span><span style="color: #E4F3FA;"> </span><span style="color: #C7F59B;">artisan</span><span style="color: #E4F3FA;"> </span><span style="color: #C7F59B;">make:provider</span><span style="color: #E4F3FA;"> </span><span style="color: #C7F59B;">ExchangeRatesServiceProvider</span></div></code>    </pre>
</div>
<p>We'll then need to remember to register this service provider inside the <code>app/config.php</code> like below:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">[</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">2</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">3</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">providers</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">=&gt;</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">[</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">4</span><span style="color: #7FDAFF;">        </span><span style="color: #7E8EDA;">// ...</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">5</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">\</span><span style="color: #FFDB8E;">App</span><span style="color: #7FDAFF;">\</span><span style="color: #FFDB8E;">Providers</span><span style="color: #7FDAFF;">\</span><span style="color: #FFDB8E;">ExchangeRatesServiceProvider</span><span style="color: #7FDAFF;">::</span><span style="color: #BAACFF;">class</span><span style="color: #7FDAFF;">,</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">6</span><span style="color: #7FDAFF;">        </span><span style="color: #7E8EDA;">// ...</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">7</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">],</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">8</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">9</span><span style="color: #7FDAFF;">]</span></div></code>    </pre>
</div>
<p>Now, we can add our code to the service provider to bind the interfaces and class:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #BAACFF;">class</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">ExchangeRatesServiceProvider</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">extends</span><span style="color: #E4F3FA;"> </span><span style="color: #7AF8CA;">ServiceProvider</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">register</span><span style="color: #7FDAFF;">():</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">void</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">4</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">5</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">$</span><span style="color: #FF757F;">this</span><span style="color: #7FDAFF;">-&gt;</span><span style="color: #A7C6E8;">app</span><span style="color: #7FDAFF;">-&gt;</span><span style="color: #70B0FF;">bind</span><span style="color: #7FDAFF;">(</span><span style="color: #FFDB8E;">ExchangeRatesService</span><span style="color: #7FDAFF;">::</span><span style="color: #BAACFF;">class</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">ExchangeRatesApiIO</span><span style="color: #7FDAFF;">::</span><span style="color: #BAACFF;">class</span><span style="color: #7FDAFF;">);</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">6</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">7</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>Now that we've done all of this, when we dependency inject the <code>ExchangeRatesService</code> interface in our controller method, we'll receive an <code>ExchangeRatesApiIO</code> class that we can use.</p>
<h2>Taking It Further</h2>
<p>Now that we know how to bind an interface to a class, let's take things a bit further. Let's imagine that we want to be able to decide whether to use the ExchangeRatesAPI.io or the Fixer.io API whenever we'd like just by updating a config field.</p>
<p>We don't have a class yet for dealing with the Fixer.io API yet, so let's create one and make sure that it implements the <code>ExchangeRatesService</code> interface:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #BAACFF;">class</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">FixerIO</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">implements</span><span style="color: #E4F3FA;"> </span><span style="color: #7AF8CA;">ExchangeRatesService</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">getRate</span><span style="color: #7FDAFF;">(</span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">from</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">string</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">to</span><span style="color: #7FDAFF;">):</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">float</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">4</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">5</span><span style="color: #7FDAFF;">        </span><span style="color: #7E8EDA;">// Make a call to the Fixer API here and fetch the exchange rate.</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">6</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">7</span><span style="color: #E4F3FA;">        </span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">$</span><span style="color: #E4F3FA;">rate</span><span style="color: #7FDAFF;">;</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">8</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">9</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>We'll now create a new field in our <code>config/services.php</code> file:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">1</span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">[</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">2</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">3</span><span style="color: #7FDAFF;">    </span><span style="color: #7E8EDA;">//...</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">4</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">5</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">exchange-rates-driver</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">=&gt;</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">env</span><span style="color: #7FDAFF;">(</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">EXCHANGE_RATES_DRIVER</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">),</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">6</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">7</span><span style="color: #7FDAFF;">];</span></div></code>    </pre>
</div>
<p>We can now update our service provider to change which class will be returned whenever we resolve the interface from the container:</p>
<div class="code-block">
    <pre>
        <code data-theme="moonlight" data-lang="php" class="torchlight" style="background-color: #212539; --theme-selection-background: #aab3e5;"><!-- Syntax highlighted by torchlight.dev --><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 1</span><span style="color: #BAACFF;">class</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">ExchangeRatesServiceProvider</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">extends</span><span style="color: #E4F3FA;"> </span><span style="color: #7AF8CA;">ServiceProvider</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 2</span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 3</span><span style="color: #E4F3FA;">    </span><span style="color: #BAACFF;">public</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #70B0FF;">register</span><span style="color: #7FDAFF;">():</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">void</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 4</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 5</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">$</span><span style="color: #FF757F;">this</span><span style="color: #7FDAFF;">-&gt;</span><span style="color: #A7C6E8;">app</span><span style="color: #7FDAFF;">-&gt;</span><span style="color: #70B0FF;">bind</span><span style="color: #7FDAFF;">(</span><span style="color: #FFDB8E;">ExchangeRatesService</span><span style="color: #7FDAFF;">::</span><span style="color: #BAACFF;">class</span><span style="color: #7FDAFF;">,</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">function</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">($</span><span style="color: #E4F3FA;">app</span><span style="color: #7FDAFF;">)</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 6</span><span style="color: #E4F3FA;">            </span><span style="color: #BAACFF;">if</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">(</span><span style="color: #70B0FF;">config</span><span style="color: #7FDAFF;">(</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">services.exchange-rates-driver</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">)</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">===</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">exchangeratesapiio</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">)</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 7</span><span style="color: #E4F3FA;">                </span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">new</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">ExchangeRatesApiIO</span><span style="color: #7FDAFF;">();</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 8</span><span style="color: #E4F3FA;">            </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number"> 9</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">10</span><span style="color: #E4F3FA;">            </span><span style="color: #BAACFF;">if</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">(</span><span style="color: #70B0FF;">config</span><span style="color: #7FDAFF;">(</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">services.exchange-rates-driver</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">)</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">===</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">fixerio</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">)</span><span style="color: #E4F3FA;"> </span><span style="color: #7FDAFF;">{</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">11</span><span style="color: #E4F3FA;">                </span><span style="color: #BAACFF;">return</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">new</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">FixerIO</span><span style="color: #7FDAFF;">();</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">12</span><span style="color: #E4F3FA;">            </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">13</span>&nbsp;</div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">14</span><span style="color: #E4F3FA;">            </span><span style="color: #BAACFF;">throw</span><span style="color: #E4F3FA;"> </span><span style="color: #BAACFF;">new</span><span style="color: #E4F3FA;"> </span><span style="color: #FFDB8E;">Exception</span><span style="color: #7FDAFF;">(</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7AF8CA;">The exchange rates driver is invalid.</span><span style="color: #7FDAFF;">&#39;</span><span style="color: #7FDAFF;">);</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">15</span><span style="color: #E4F3FA;">        </span><span style="color: #7FDAFF;">});</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">16</span><span style="color: #E4F3FA;">    </span><span style="color: #7FDAFF;">}</span></div><div class='line'><span style="color:#5b6395; text-align: right; -webkit-user-select: none; user-select: none;" class="line-number">17</span><span style="color: #7FDAFF;">}</span></div></code>    </pre>
</div>
<p>Now if we set our exchanges rates driver in our <em>.env</em> to <code>EXCHANGE_RATES_DRIVER=exchangeratesapiio</code> and try to resolve the <code>ExchangeRatesService</code> from the container, we will receive an <code>ExchangeRatesApiIO</code> class. If we set our exchanges rates driver in our <em>.env</em> to <code>EXCHANGE_RATES_DRIVER=fixerio</code> and try to resolve the <code>ExchangeRatesService</code> from the container, we will receive an <code>FixerIO</code> class. If we set driver to anything else accidentally, an exception will be thrown to let us know that it's incorrect.</p>
<p>Due to the fact that both of the classes implement the same interface, we can seamlessly change the <code>EXCHANGE_RATES_DRIVER</code> field in the <em>.env</em> file and not need to change any other code anywhere.</p>
<div class="blog-affiliate-one"></div>
<h2>Conclusion</h2>
<p>Is your brain fried yet? If it is, don't worry! Personally, I found this topic pretty difficult to understand when I first learnt about it. I don't think I started to really understand it until I put it into practice and used it myself. So, I'd advise spending a little bit of time experimenting with this yourself. Once you get comfortable with using it, I guarantee that you'll start using it in your own projects.</p>
<p>Hopefully, this article has given you an overview of what the strategy pattern is and how you can use it in Laravel to improve the extendability and maintainability of your code.</p>
<p>If you found this post useful, I'd love to hear about it in the comments.</p>
<p>Keep on building awesome things! ð</p>

            </div>
        </div>
    </div>
                    <div class="author-box clearfix rounded-thumbnail">
        <form class="subscription-form">
            <div class="author-avatar">
                <i class="far fa-paper-plane"></i>
            </div>
            <div class="author-info">
                <div class="author-info-head">
                    <h3>Get your FREE copy of "<span class="pdf-name">The Clean Coder's Guide to Laravel</span>" and subscribe for future posts!</h3>
                </div>
                <div class="author-description">
                    <p class="mb-2 pt-2">
                        Join over 4000 developers who have already downloaded their copy!
                    </p>

                    <p class="mb-2">
                        Drop your email in the box below and you'll get notified every time a new post is published. You'll also get a FREE copy of my <strong>70 page</strong> PDF that shows you how you can make your Laravel projects cleaner.
                    </p>

                    <div class="row">
                        <div class="col-md">
                            <div class="form-group">
                                <input type="email" class="form-control" name="email" id="email" required placeholder="Your email address">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <button type="submit" class="btn fill-style">Subscribe</button>
                        </div>
                        <div class="col-md-12 error-box"></div>
                    </div>
                </div>
            </div>
        </form>
    </div>

                    <hr>
                    <p class="font-italic mb-2">Blog post banner image by <a href="https://jesspickup.co.uk">Jess Pickup</a>.</p>

                    
                    <div class="text-center">
    <hr>

    <div class="row py-3">
        <div class="col-lg text-left">
                            <a href="an-introduction-to-caching-in-laravel" class="prev-next-container row align-items-center">
                    <div class="col-2">
                        <i class="fas fa-chevron-left prev-next-button"></i>
                    </div>
                    <div class="col">
                        <strong>Previous article:</strong><br>
                        An Introduction to Caching in Laravel
                    </div>
                </a>
                    </div>
        <div class="col-lg text-right pt-4 py-lg-0">
                            <a href="cleaning-up-laravel-controllers" class="prev-next-container row align-items-center">
                    <div class="col">
                        <strong>Next article:</strong><br>
                        Cleaning Up Laravel Controllers
                    </div>
                    <div class="col-2">
                        <i class="fas fa-chevron-right prev-next-button"></i>
                    </div>
                </a>
                    </div>
    </div>
</div>
                    <hr>
                    <div class="share-buttons text-center">
    <h5><strong>Share!</strong></h5>

    <!-- Email -->
    <div class="p-1 share-button-container">
        <a href="mailto:?Subject=Sharing this blog post from Ash Allen Design!&Body=I am sharing this blog post from Ash Allen Design!https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel">
            <img src="https://simplesharebuttons.com/images/somacro/email.png"
                 alt="Share website design email to Email"/>
        </a>
    </div>

    <!-- Facebook -->
    <div class="p-1 share-button-container">
        <a href="http://www.facebook.com/sharer.php?u=https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel" target="_blank" rel="noopener noreferrer">
            <img src="https://simplesharebuttons.com/images/somacro/facebook.png"
                 alt="Share website design email to Facebook"/>
        </a>
    </div>


    <!-- LinkedIn -->
    <div class="p-1 share-button-container">
        <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel"
           target="_blank" rel="noopener noreferrer">
            <img src="https://simplesharebuttons.com/images/somacro/linkedin.png"
                 alt="Share website design email to LinkedIn"/>
        </a>
    </div>

    <!-- Print -->
    <div class="p-1 share-button-container">
        <a href="javascript:;" onclick="window.print()">
            <img src="https://simplesharebuttons.com/images/somacro/print.png"
                 alt="Share website design email to Print"/>
        </a>
    </div>

    <!-- Reddit -->
    <div class="p-1 share-button-container">
        <a href="http://reddit.com/submit?url=https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel&amp;title=Using the Strategy Pattern in Laravel"
           target="_blank" rel="noopener noreferrer">
            <img src="https://simplesharebuttons.com/images/somacro/reddit.png"
                 alt="Share website design email to Reddit"/>
        </a>
    </div>

    <!-- Tumblr-->
    <div class="p-1 share-button-container">
        <a href="http://www.tumblr.com/share/link?url=https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel&amp;title=Simple Share Buttons"
           target="_blank" rel="noopener noreferrer">
            <img src="https://simplesharebuttons.com/images/somacro/tumblr.png"
                 alt="Share website design email to Tumblr"/>
        </a>
    </div>

    <!-- Twitter -->
    <div class="p-1 share-button-container">
        <a href="https://twitter.com/share?url=https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel&amp;text=Using the Strategy Pattern in Laravel&amp;hashtags=ashallendesign,webdesign"
           target="_blank" rel="noopener noreferrer">
            <img src="https://simplesharebuttons.com/images/somacro/twitter.png"
                 alt="Share website design email to Twitter"/>
        </a>
    </div>
</div>

                    <div class="mt-5" id="disqus_thread"></div>
                </main>

                <aside class="col-lg-3 offset-lg-1">
                    <div class="widget widget-tags">
    <div class="row align-items-center">
        <div class="col-3">
            <img src="../images/custom/AshleyAllen-Blog.png?v=1"
                 alt="Ashley Allen - Freelance web developer"
                 class="blog-author-image mr-2 shadow">
        </div>
        <div class="col-lg-6">
            <p class="side-bar-author my-auto mb-0">Ashley Allen</p>
        </div>
        <div class="col-12 widget-title"></div>
    </div>
    <div class="row mb-5">
        <p class="col-12 text-muted font-size-regular">
            I'm a freelance Laravel web developer who loves contributing to open-source projects and building exciting systems to help businesses succeed.
            <br>
        </p>
        <div class="col-12">
            <iframe src="https://github.com/sponsors/ash-jc-allen/button"
        title="Sponsor ash-jc-allen"
        height="35"
        width="116"
        style="border: 0;">
</iframe>
        </div>
    </div>

    <h3 class="widget-title">Related</h3>
    <div class="mb-5 pb-1">
                    <div class="blog-post mb-4">
                <div class="post-thumb shadow mb-3">
                    <a href="what-s-new-in-laravel-config-validator-v2-0-0-and-v2-1-0" class="d-block rounded-thumbnail shadow">
                        <img data-src="https://ashallendesign.ams3.digitaloceanspaces.com/public/blog/82/whats-new-in-laravel-config-validator-v200-and-v210_small.png"
                             alt="What&#039;s New in Laravel Config Validator v2.0.0 &amp; v2.1.0"
                             class="rounded-thumbnail lazyload">
                    </a>
                </div>
                <div class="post-info">
                    <h4 class="related-post-title">
                        <a href="what-s-new-in-laravel-config-validator-v2-0-0-and-v2-1-0">
                            What&#039;s New in Laravel Config Validator v2.0.0 &amp; v2.1.0
                        </a>
                    </h4>

                    <img data-src="/images/custom/AshleyAllen-Blog.png?v=1" alt="Ashley Allen - Freelance web developer"
                         class="blog-author-image-smaller mr-2 shadow-sm lazyload">
                    <span class="meta-author">Ashley Allen</span>
                </div>
            </div>
                    <div class="blog-post mb-4">
                <div class="post-thumb shadow mb-3">
                    <a href="round-up-march-2022" class="d-block rounded-thumbnail shadow">
                        <img data-src="https://ashallendesign.ams3.digitaloceanspaces.com/public/blog/81/round-up-march-2022_small.png"
                             alt="Round Up: March 2022"
                             class="rounded-thumbnail lazyload">
                    </a>
                </div>
                <div class="post-info">
                    <h4 class="related-post-title">
                        <a href="round-up-march-2022">
                            Round Up: March 2022
                        </a>
                    </h4>

                    <img data-src="/images/custom/AshleyAllen-Blog.png?v=1" alt="Ashley Allen - Freelance web developer"
                         class="blog-author-image-smaller mr-2 shadow-sm lazyload">
                    <span class="meta-author">Ashley Allen</span>
                </div>
            </div>
                    <div class="blog-post mb-4">
                <div class="post-thumb shadow mb-3">
                    <a href="using-query-in-laravel-eloquent-queries" class="d-block rounded-thumbnail shadow">
                        <img data-src="https://ashallendesign.ams3.digitaloceanspaces.com/public/blog/79/Using query in Laravel Eloquent Queries_small.png"
                             alt="Using &#039;query()&#039; in Laravel Eloquent Queries"
                             class="rounded-thumbnail lazyload">
                    </a>
                </div>
                <div class="post-info">
                    <h4 class="related-post-title">
                        <a href="using-query-in-laravel-eloquent-queries">
                            Using &#039;query()&#039; in Laravel Eloquent Queries
                        </a>
                    </h4>

                    <img data-src="/images/custom/AshleyAllen-Blog.png?v=1" alt="Ashley Allen - Freelance web developer"
                         class="blog-author-image-smaller mr-2 shadow-sm lazyload">
                    <span class="meta-author">Ashley Allen</span>
                </div>
            </div>
            </div>

    <h3 class="widget-title pb-4"></h3>
    <div>
        <div class="author-box clearfix sponsor-section ml-0">
    <div class="author-info">
        <div class="author-info-head">
            <h3>Sponsor Me! ð</h3>
        </div>
        <div class="author-description">
            <p class="mb-3 pt-2 font-size-regular">
                Help support the blog so that I can continue creating new content!
            </p>

            <iframe src="https://github.com/sponsors/ash-jc-allen/button"
        title="Sponsor ash-jc-allen"
        height="35"
        width="116"
        style="border: 0;">
</iframe>
        </div>
    </div>
</div>

        <h3 class="widget-title pb-4"></h3>

        <div class="blog-post mb-4">
            <div class="post-thumb shadow mb-3">
                <a href="https://www.digitalocean.com/?refcode=7d06055e9d46&utm_campaign=Referral_Invite&utm_medium=Referral_Program&utm_source=badge"
                   class="d-block rounded-thumbnail shadow"
                   target="_blank"
                   rel="noreferrer noopener"
                >
                    <img data-src="/images/custom/sponsors/digital-ocean-free-credit.png"
                         alt="DigitalOcean Referral Badge"
                         class="rounded-thumbnail lazyload">
                </a>
            </div>
        </div>

        <div class="blog-post mb-4">
            <div class="post-thumb shadow mb-3">
                <a href="https://usefathom.com/ref/IYEWUV"
                   class="d-block rounded-thumbnail shadow"
                   target="_blank"
                   rel="noreferrer noopener"
                >
                    <img data-src="/images/custom/sponsors/fathom-vertical.png"
                         alt="Fathom Analytics"
                         class="rounded-thumbnail lazyload">
                </a>
            </div>
        </div>
    </div>
</div>
                </aside>
            </div>
        </div>
    </div>

<footer class="footer">
    <div class="animated-waves">
        <svg width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg" class="animated-wave">
            <defs></defs>
            <path id="animated-wave-one" d=""/>
        </svg>
        <svg width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg" class="animated-wave">
            <defs></defs>
            <path id="animated-wave-two" d=""/>
        </svg>
        <svg width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg" class="animated-wave">
            <defs></defs>
            <path id="animated-wave-three" d=""/>
        </svg>
        <svg width="100%" height="100%" version="1.1" xmlns="http://www.w3.org/2000/svg" class="animated-wave">
            <defs></defs>
            <path id="animated-wave-four" d=""/>
        </svg>
    </div>
    <div class="f-widget-area">
        <div class="container">
            <div class="row">
                <div class="col-lg-3 col-sm-6">
                    <div class="f-widget">
                        <div class="f-logo">
                            <img src="../images/custom/logo-colour-side.png" alt="Ash Allen Design logo in colour">
                        </div>
                        <p>A passionate freelance web developer based in Preston, Lancashire, UK. </p>
                        <div class="footer-social-media">
                            <ul class="social-profile">
                                <li>
                                    <a href="https://www.facebook.com/ashallendesignuk/" class="p-2" target="_blank" rel="noopener noreferrer">
                                        <i class="social_facebook"></i>
                                    </a>
                                </li>
                                <li>
                                    <a href="https://linkedin.com/company/ash-allen-design" class="p-2" target="_blank" rel="noopener noreferrer">
                                        <i class="social_linkedin"></i>
                                    </a>
                                </li>
                                <li>
                                    <a href="https://github.com/ash-jc-allen" class="p-2" target="_blank" rel="noopener noreferrer">
                                        <i class="fab fa-github"></i>
                                    </a>
                                </li>
                                <li>
                                    <a href="https://www.instagram.com/ashallendesign_uk/" class="p-2" target="_blank" rel="noopener noreferrer">
                                        <i class="social_instagram"></i>
                                    </a>
                                </li>
                            </ul>
                        </div>

                        <a href="https://www.digitalocean.com/?refcode=7d06055e9d46&utm_campaign=Referral_Invite&utm_medium=Referral_Program&utm_source=badge">
                            <img data-src="/images/custom/sponsors/digital-ocean-white.svg" alt="DigitalOcean Referral Badge" class="lazyload"/>
                        </a>

                        <div class="mt-3">
                            <iframe src="https://github.com/sponsors/ash-jc-allen/button"
        title="Sponsor ash-jc-allen"
        height="35"
        width="116"
        style="border: 0;">
</iframe>
                        </div>
                    </div>
                </div>
                <div class="col-lg-8 offset-lg-1">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="f-widget">
                                <h3 class="f-widget-title">Services</h3>
                                <ul class="f-list">
                                    <li><a href="../services/website-design">Website Design</a></li>
                                    <li><a href="../services/laravel-web-development">Laravel Web Development</a></li>
                                </ul>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="f-widget">
                                <h3 class="f-widget-title">About Me</h3>
                                <ul class="f-list">
                                    <li><a href="../portfolio">Portfolio</a></li>
                                    <li><a href="../blog">Blog</a></li>
                                    <li><a href="../contact">Contact</a></li>
                                </ul>
                            </div>
                        </div>
                        <div class="col-lg-4">
                    <div class="f-widget">
                        <h3 class="f-widget-title">Contact Info</h3>
                        <ul class="f-contact-list">
                            <li><span>Office:</span> Preston, Lancashire, UK</li>
                            <li><span>Call Me:</span> 07963 116038</li>
                            <li><span>Email Me:</span> mail@ashallendesign.co.uk</li>
                        </ul>
                    </div>
                </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="f-copyright-area">
        <div class="container">
            <div class="row align-items-center justify-content-center">
                <div class="col-md-6">
                    <p class="copyright text-center text-md-left mb-2 mb-md-0">
                        Â© 2022 <a href="../index.html">Ash Allen Design</a> ALL RIGHTS RESERVED
                    </p>
                </div>
                <div class="col-md-6 text-right">
                    <p class="copyright text-center text-md-left mb-2 mb-md-0 d-inline-block mr-2">
                        <a href="../privacy-policy" class="dark-link">Privacy Policy</a>
                    </p>
                    <p class="copyright text-center text-md-left mb-2 mb-md-0 d-inline-block mr-2">
                        <a href="../terms-of-service" class="dark-link">Terms of Service</a>
                    </p>
                    <p class="copyright text-center text-md-left mb-2 mb-md-0 d-inline-block">
                        <a href="../sitemap" class="dark-link">Sitemap</a>
                    </p>
                </div>
            </div>
        </div>
    </div>
</footer><!-- footer -->
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.4.0/dist/confetti.browser.min.js"></script>

    <script>
        var disqus_config = function () {
            this.page.url = "https://ashallendesign.co.uk/blog/using-the-bridge-pattern-in-laravel";
            this.page.identifier = "using-the-bridge-pattern-in-laravel";
            this.page.title = "Using the Strategy Pattern in Laravel";
        };
    </script>
</body>
</html>
